seems like 9 & 10 but with more filtering?

.* ../../../../../etc/natas_webpass/natas17 doesn't work, but doesn't return 'Input contains an illegal character!'

subshells - executing a shell command inside another shell command
only works because the command we are inecting into uses double quotes
$(command goes here)

if($key != "") {
    if(preg_match('/[;|&`\'"]/',$key)) {
        print "Input contains an illegal character!";
    } else {
        passthru("grep -i \"$key\" dictionary.txt");
    }

allowable characters: $()>~!{}
dissalowed characters: [;|&`\'"]
should be able to do something with these...

did a burp intruder attack, was able to find the characters which match the password. i now have a 'true/false' condition
if a character matches the password, the response will show the entire dictionary (462177 characters long)
otherwise doesn't return any results (just the regular page with no output)

first: figure out how to make grep case sensitive (it doesn't seem to be right now)
    ok that was easy, just don't use -i
second: figure out how to go through each character of the password (like the last challenge).
    grep -E '^.{12}[89]8765' file1
            '^.{12} part here means any first 12 characters (example was matching characters 13-17)
    so we could use this...i think?
    no because we can't use quotes
    but maybe we don't need quotes?
    grep ^.a works without quotes on my macbook, but doesn't seem to behave the same on natas...
        further research required, we'll see what the group says.
    
    *important note* 
    there are double quotes on either side of $key, meaning that payload is actually "payload" for testing purposes

    using range() and chr(i) seems redundant now, will be easier to just iterate through letters & numbers
    can use python string pckg.
    string.ascii_letters + string.digits 
    
    echo "${$(grep ^.a password.txt):0:1}" works locally, but doesn't translate to natas (yet...!)
    full command woudl be:
    grep -i "${$(grep ^.a password.txt):1:1}" dictionary.txt
    which again, works locally, but for some reason adding the ${x:0:1} breaks natas
                                                                 ^x is $(grep ^.a password.txt)
    not really sure why it doesn't work, gonna sleep on it and try again tmrw.

    so according to what i've got so far, it looks like there are 36 valid characters (???)
    all the other passwords were 32 characters, it seems unlikely that it would change now?